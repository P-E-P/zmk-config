/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        RTabulation {
            bindings = <&kp TAB>;
            key-positions = <8 7>;
        };

        LTabulation {
            bindings = <&kp TAB>;
            key-positions = <4 3>;
        };
    };

    behaviors {
        homerowleft: homerowleft {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWLEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        homerowright: homerowright {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWRIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                    &kp W                    &kp F                      &kp P                 &kp B        &kp J    &kp L                          &kp U                        &kp Y                      &kp COLON                  &none
&none  &homerowleft LEFT_GUI A  &homerowleft LEFT_ALT R  &homerowleft LEFT_SHIFT S  &homerowleft LCTRL T  &kp G        &kp M    &homerowright RIGHT_CONTROL N  &homerowright RIGHT_SHIFT E  &homerowright RIGHT_ALT I  &homerowright RIGHT_GUI O  &none
&none  &kp X                    &kp C                    &kp D                      &kp V                 &kp Z        &kp K    &kp H                          &kp COMMA                    &kp DOT                    &kp FSLH                   &none
                                                         &kp ESCAPE                 &mo 1                 &kp SPACE    &kp RET  &mo 2                          &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&none  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                   &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL           &kp AT         &kp HASH   &kp DLLR          &kp PRCNT           &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp TILDE  &kp GREATER_THAN  &kp SINGLE_QUOTE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &trans             &trans         &trans     &trans            &kp GRAVE           &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                                         &kp LGUI   &trans            &kp SPACE           &kp RET    &trans     &kp RALT
            >;
        };

        configuration {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &trans  &trans  &trans  &bt BT_CLR  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans                                &none   &none   &none   &trans      &trans
&trans  &trans         &trans         &trans         &trans         &trans           &trans                                &trans  &trans  &trans  &trans      &trans
                                      &trans         &trans         &bt BT_PRV       &bt BT_NXT                            &trans  &trans
            >;
        };
    };
};
